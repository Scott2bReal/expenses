#! /usr/bin/env ruby

require 'pg'

CONNECTION = PG.connect(dbname: 'expenses')

def display_help
  msg = <<~MSG
  An expense recording system

  Commands:

  add AMOUNT MEMO [DATE] - record a new expense
  clear - delete all expenses
  list - list all expenses
  delete NUMBER - remove expense with id NUMBER
  search QUERY - list expenses with a matching memo field
MSG

  puts msg
end

def add_expense(amount, memo)
  sql = "INSERT INTO expenses(amount, memo, created_on) VALUES (#{amount}, '#{memo}', NOW())"
  CONNECTION.exec(sql)
end

def list_expenses
  result = CONNECTION.exec('SELECT * FROM expenses;')

  result.each do |tuple|
    columns = [tuple['id'].rjust(3),
               tuple['created_on'].rjust(10),
               tuple['amount'].rjust(9 - tuple['amount'].length),
               tuple['memo']]
    puts columns.join(' | ')
  end
end

argument = ARGV.first

# Main program flow
case argument
when 'list'
  list_expenses
when 'add'
  amount = ARGV[1]
  memo = ARGV[2]
  abort "You must provide an amount and a memo." unless amount && memo
  add_expense(amount, memo)
else
  display_help
end
